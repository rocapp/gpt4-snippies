{
  "openapi": "3.0.0",
  "info": {
    "title": "Civitai API",
    "version": "v1",
    "description": "Civitai REST API Documentation."
  },
  "servers": [
    {
      "url": "https://civitai.com/api/v1/"
    }
  ],
  "paths": {
    "/creators": {
      "get": {
        "summary": "List Creators",
        "description": "Command to get creators.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start fetching creators from.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Search query to filter creators by username.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of creators.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatorsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/images": {
      "get": {
        "summary": "List Images",
        "description": "Command to get images.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "postId",
            "in": "query",
            "description": "The ID of a post to get images from.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "modelId",
            "in": "query",
            "description": "The ID of a model to get images from (model gallery).",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "modelVersionId",
            "in": "query",
            "description": "The ID of a model version to get images from (model gallery filtered to version).",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "Filter to images from a specific user.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nsfw",
            "in": "query",
            "description": "Filter to images that contain mature content flags or not.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The order in which you wish to sort the results.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page from which to start fetching creators.",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of images.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/models": {
      "get": {
        "summary": "List Models",
        "description": "Command to get models.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start fetching models from.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Search query to filter models by name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "description": "Search query to filter models by tag.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "Search query to filter models by user.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "types",
            "in": "query",
            "description": "The type of model to filter with.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The order in which to sort the results.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of models.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelsResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreatorsResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creator"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/Metadata"
          }
        }
      },
      "Creator": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "modelCount": {
            "type": "number"
          },
          "link": {
            "type": "string"
          }
        }
      },
      "ImagesResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/Metadata"
          }
        }
      },
      "Image": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "url": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "width": {
            "type": "number"
          },
          "height": {
            "type": "number"
          },
          "nsfw": {
            "type": "boolean"
          },
          "nsfwLevel": {
            "type": "string",
            "enum": ["None", "Soft", "Mature", "X"]
          },
          "createdAt": {
            "type": "string"
          },
          "postId": {
            "type": "number"
          },
          "stats": {
            "type": "object",
            "properties": {
              "views": {
                "type": "number"
              },
              "likes": {
                "type": "number"
              },
              "comments": {
                "type": "number"
              }
            }
          }
        }
      },
      "ModelsResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Model"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/Metadata"
          }
        }
      },
      "Model": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/Creator"
          },
          "createdAt": {
            "type": "string"
          },
          "stats": {
            "type": "object",
            "properties": {
              "views": {
                "type": "number"
              },
              "likes": {
                "type": "number"
              },
              "downloads": {
                "type": "number"
              },
              "comments": {
                "type": "number"
              }
            }
          }
        }
      },
      "Metadata": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "number"
          },
          "totalPages": {
            "type": "number"
          },
          "currentPage": {
            "type": "number"
          },
          "perPage": {
            "type": "number"
          }
        }
      }
    }
  }
}